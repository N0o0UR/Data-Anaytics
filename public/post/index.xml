<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Nouran -Fundamentals of Analytics</title>
    <link>/post/</link>
    <description>Recent content in Posts on Nouran -Fundamentals of Analytics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A05  Exploratory Data Analysis</title>
      <link>/2021/06/16/a05-exploratory-data-analysis/</link>
      <pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/16/a05-exploratory-data-analysis/</guid>
      <description>The datasetThe data used in this blog was obtained from The World Bank Data, to access the source of the data use the link below
example websitehttps://data.worldbank.org/topic/health?view=chart
Initial Analysis Questions1- whatâ€™s the country with the highest population in 2019?
2- which country has the highest population of elderly in 2019?
3- which country has the highest birth rate in 2019?
4- which country has the highest mortality rate in 2019?</description>
    </item>
    
    <item>
      <title>Fitting and Interpreting models </title>
      <link>/2021/06/15/fitting-and-interpreting-models/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/15/fitting-and-interpreting-models/</guid>
      <description>Import LibrariesImport Data: Paris Paintingspp &amp;lt;- read_csv(&amp;quot;paris-paintings.csv&amp;quot;, na = c(&amp;quot;n/a&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;NA&amp;quot;))## ## -- Column specification --------------------------------------------------------## cols(## .default = col_double(),## name = col_character(),## sale = col_character(),## lot = col_character(),## dealer = col_character(),## origin_author = col_character(),## origin_cat = col_character(),## school_pntg = col_character(),## price = col_number(),## subject = col_character(),## authorstandard = col_character(),## authorstyle = col_character(),## author = col_character(),## winningbidder = col_character(),## winningbiddertype = col_character(),## endbuyer = col_character(),## type_intermed = col_character(),## Shape = col_character(),## material = col_character(),## mat = col_character(),## materialCat = col_character()## )## i Use `spec()` for the full column specifications.</description>
    </item>
    
    <item>
      <title>A04 Shiny App</title>
      <link>/2021/06/11/a04-shiny-app/</link>
      <pubDate>Fri, 11 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/11/a04-shiny-app/</guid>
      <description>Provisional count of deaths involving coronavirus disease 2019 (COVID-19) by United States countyThe data used in this post is obtained from Data.Gov and it shows the provisional count of deaths involving coronavirus disease 2019 (COVID-19) by United States county.
The dataset is intended for public access and use.
</description>
    </item>
    
    <item>
      <title>A03</title>
      <link>/2021/06/03/a03/</link>
      <pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/03/a03/</guid>
      <description>Reading the lego_sales.csv filelibrary(tidyverse)## -- Attaching packages --------------------------------------- tidyverse 1.3.1 --## v ggplot2 3.3.3 v purrr 0.3.4## v tibble 3.1.1 v dplyr 1.0.6## v tidyr 1.1.3 v stringr 1.4.0## v readr 1.4.0 v forcats 0.5.1## -- Conflicts ------------------------------------------ tidyverse_conflicts() --## x dplyr::filter() masks stats::filter()## x dplyr::lag() masks stats::lag()lego_sales &amp;lt;- read_csv(&amp;quot;lego_sales.csv&amp;quot;)## ## -- Column specification --------------------------------------------------------## cols(## first_name = col_character(),## last_name = col_character(),## age = col_double(),## phone_number = col_character(),## set_id = col_double(),## number = col_character(),## theme = col_character(),## subtheme = col_character(),## year = col_double(),## name = col_character(),## pieces = col_double(),## us_price = col_double(),## image_url = col_character(),## quantity = col_double()## )glimpse(lego_sales)## Rows: 620## Columns: 14## $ first_name &amp;lt;chr&amp;gt; &amp;quot;Kimberly&amp;quot;, &amp;quot;Neel&amp;quot;, &amp;quot;Neel&amp;quot;, &amp;quot;Chelsea&amp;quot;, &amp;quot;Chelsea&amp;quot;, &amp;quot;Chelse~## $ last_name &amp;lt;chr&amp;gt; &amp;quot;Beckstead&amp;quot;, &amp;quot;Garvin&amp;quot;, &amp;quot;Garvin&amp;quot;, &amp;quot;Bouchard&amp;quot;, &amp;quot;Bouchard&amp;quot;, ~## $ age &amp;lt;dbl&amp;gt; 24, 35, 35, 41, 41, 41, 19, 19, 37, 37, 19, 19, 20, 36, 3~## $ phone_number &amp;lt;chr&amp;gt; &amp;quot;216-555-2549&amp;quot;, &amp;quot;819-555-3189&amp;quot;, &amp;quot;819-555-3189&amp;quot;, NA, NA, N~## $ set_id &amp;lt;dbl&amp;gt; 24701, 25626, 24665, 24695, 25626, 24721, 24797, 24701, 2~## $ number &amp;lt;chr&amp;gt; &amp;quot;76062&amp;quot;, &amp;quot;70595&amp;quot;, &amp;quot;21031&amp;quot;, &amp;quot;31048&amp;quot;, &amp;quot;70595&amp;quot;, &amp;quot;10831&amp;quot;, &amp;quot;75~## $ theme &amp;lt;chr&amp;gt; &amp;quot;DC Comics Super Heroes&amp;quot;, &amp;quot;Ninjago&amp;quot;, &amp;quot;Architecture&amp;quot;, &amp;quot;Cre~## $ subtheme &amp;lt;chr&amp;gt; &amp;quot;Mighty Micros&amp;quot;, &amp;quot;Rise of the Villains&amp;quot;, NA, NA, &amp;quot;Rise of~## $ year &amp;lt;dbl&amp;gt; 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 201~## $ name &amp;lt;chr&amp;gt; &amp;quot;Robin vs.</description>
    </item>
    
    <item>
      <title>Data I/O</title>
      <link>/2021/06/01/data-i-o/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/01/data-i-o/</guid>
      <description>Import Nobel.csv filelibrary(tidyverse)## -- Attaching packages --------------------------------------- tidyverse 1.3.1 --## v ggplot2 3.3.3 v purrr 0.3.4## v tibble 3.1.1 v dplyr 1.0.6## v tidyr 1.1.3 v stringr 1.4.0## v readr 1.4.0 v forcats 0.5.1## -- Conflicts ------------------------------------------ tidyverse_conflicts() --## x dplyr::filter() masks stats::filter()## x dplyr::lag() masks stats::lag()nobel &amp;lt;- read_csv(&amp;quot;nobel.csv&amp;quot;)## ## -- Column specification --------------------------------------------------------## cols(## .</description>
    </item>
    
    <item>
      <title>Data Record</title>
      <link>/2021/06/01/data-record/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/01/data-record/</guid>
      <description>Import and Transform Relig-income.csv filelibrary(tidyverse)## -- Attaching packages --------------------------------------- tidyverse 1.3.1 --## v ggplot2 3.3.3 v purrr 0.3.4## v tibble 3.1.1 v dplyr 1.0.6## v tidyr 1.1.3 v stringr 1.4.0## v readr 1.4.0 v forcats 0.5.1## -- Conflicts ------------------------------------------ tidyverse_conflicts() --## x dplyr::filter() masks stats::filter()## x dplyr::lag() masks stats::lag()library(readxl)rel_inc &amp;lt;- read_excel(&amp;quot;relig-income.xlsx&amp;quot;)rel_inc_long &amp;lt;- rel_inc %&amp;gt;%rename( religion = `Religious tradition`, n = `Sample Size` ) %&amp;gt;%pivot_longer( cols = -c(religion, n), # all but religion and n names_to = &amp;quot;income&amp;quot;, values_to = &amp;quot;proportion&amp;quot; ) %&amp;gt;%mutate(frequency = round(proportion * n))Visualize using Barplotrel_inc_long &amp;lt;- rel_inc_long %&amp;gt;%mutate(religion = case_when(religion == &amp;quot;Evangelical Protestant&amp;quot; ~ &amp;quot;Ev.</description>
    </item>
    
    <item>
      <title>Assignment A02: TIDYVERSE</title>
      <link>/2021/05/27/assignment-a02-tidyverse/</link>
      <pubDate>Thu, 27 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/27/assignment-a02-tidyverse/</guid>
      <description>COVID-19 World Vaccination ProgressDaily and Total Vaccination for COVID-19 in the World from Our World in Data, Data is collected daily from Our World in Data GitHub repository for covid-19, merged and uploaded.the used data set in this blog is updated version (119) and it was released in may 26th,2021.
library(tidyverse)## -- Attaching packages --------------------------------------- tidyverse 1.3.1 --## v ggplot2 3.3.3 v purrr 0.3.4## v tibble 3.</description>
    </item>
    
    <item>
      <title>Data Wrangling using Tidyverse</title>
      <link>/2021/05/25/data-wrangling-using-tidyverse/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/25/data-wrangling-using-tidyverse/</guid>
      <description>Import the Hotels.cvs filelibrary(tidyverse)## -- Attaching packages --------------------------------------- tidyverse 1.3.1 --## v ggplot2 3.3.3 v purrr 0.3.4## v tibble 3.1.1 v dplyr 1.0.6## v tidyr 1.1.3 v stringr 1.4.0## v readr 1.4.0 v forcats 0.5.1## -- Conflicts ------------------------------------------ tidyverse_conflicts() --## x dplyr::filter() masks stats::filter()## x dplyr::lag() masks stats::lag()hotels &amp;lt;- read_csv(&amp;quot;hotels.csv&amp;quot;)## ## -- Column specification --------------------------------------------------------## cols(## .</description>
    </item>
    
    <item>
      <title>Fun with R</title>
      <link>/2021/05/25/fun-with-r/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/25/fun-with-r/</guid>
      <description>The Variables and Numbersx&amp;lt;- 1y=23 -&amp;gt; zx+y## [1] 3y*z## [1] 6y/x## [1] 2Vectorsa&amp;lt;- 0:10print(a)## [1] 0 1 2 3 4 5 6 7 8 9 10b&amp;lt;- 10:-4print(b)## [1] 10 9 8 7 6 5 4 3 2 1 0 -1 -2 -3 -4class(a)## [1] &amp;quot;integer&amp;quot;str(a)## int [1:11] 0 1 2 3 4 5 6 7 8 9 .</description>
    </item>
    
    <item>
      <title>Assignment A01: GGPLOT2 </title>
      <link>/2021/05/22/assignment-a01-ggplot2/</link>
      <pubDate>Sat, 22 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/22/assignment-a01-ggplot2/</guid>
      <description>First, The Effect of Vitamin C on Tooth Growth in Guinea PigsIn this blog we are going to show the effect of providing vitamin C on the growth of the odontoblasts of 60 guinea pigs.
Keywords:Odontoblasts: cells responsible for tooth growthAscorbic acid: a form of vitamin C and coded as VC.Each pig received one of three dose levels of vitamin C which are:0.</description>
    </item>
    
    <item>
      <title>Data and Visualization</title>
      <link>/2021/05/18/data-and-visualization/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/18/data-and-visualization/</guid>
      <description>Data visualization Exerciselibrary(dplyr)starwars## # A tibble: 87 x 14## name height mass hair_color skin_color eye_color birth_year sex gender## &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; ## 1 Luke S~ 172 77 blond fair blue 19 male mascu~## 2 C-3PO 167 75 &amp;lt;NA&amp;gt; gold yellow 112 none mascu~## 3 R2-D2 96 32 &amp;lt;NA&amp;gt; white, bl~ red 33 none mascu~## 4 Darth ~ 202 136 none white yellow 41.</description>
    </item>
    
    <item>
      <title>Data Visualisation using ggplot2 </title>
      <link>/2021/05/18/data-visualisation-using-ggplot2/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/18/data-visualisation-using-ggplot2/</guid>
      <description>Palmer Penguins Data Visualization</description>
    </item>
    
  </channel>
</rss>
